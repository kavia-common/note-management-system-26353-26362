{"is_source_file": true, "format": "Python (FastAPI + SQLAlchemy + Pydantic)", "description": "This is a backend source file implementing a notes management API using FastAPI. It includes database models, dependency injection for database sessions, token-based authentication, and routes for users to login, and perform CRUD operations on notes, all with appropriate authorization. The file also manages environment configuration for database connectivity.", "external_files": ["fastapi", "fastapi.middleware.cors", "fastapi.security", "pydantic", "sqlalchemy"], "external_methods": ["os.getenv", "create_engine", "SessionLocal", "Base.metadata.create_all", "Depends", "HTTPException", "status.HTTP_401_UNAUTHORIZED", "status.HTTP_404_NOT_FOUND", "status.HTTP_201_CREATED", "datetime.now", "func.now"], "published": ["app", "login", "list_notes", "create_note", "update_note", "delete_note", "health_check", "websocket_usage_info"], "classes": [{"name": "User", "description": "Database model for user accounts with relationships to notes."}, {"name": "Note", "description": "Database model for notes with foreign key to user and timestamps."}, {"name": "UserOut", "description": "Pydantic schema for user output representation."}, {"name": "NoteBase", "description": "Base Pydantic schema for note data."}, {"name": "NoteCreate", "description": "Schema for creating a new note, inheriting from NoteBase."}, {"name": "NoteUpdate", "description": "Schema for updating notes with optional fields."}, {"name": "NoteOut", "description": "Schema for returning note data with IDs and timestamps."}, {"name": "LoginRequest", "description": "Schema for login payload containing email and optional password."}, {"name": "TokenResponse", "description": "Schema for returning authentication token details and user info."}], "methods": [{"name": "Optional[str] _build_db_url_from_env()", "description": "Constructs a database URL from environment variables.", "scope": "", "scopeKind": ""}, {"name": "tuple _create_engine_with_fallback()", "description": "Creates SQLAlchemy engine, attempting PostgreSQL, falling back to SQLite.", "scope": "", "scopeKind": ""}, {"name": "get_db()", "description": "FastAPI dependency that provides a database session per request.", "scope": "", "scopeKind": ""}, {"name": "User verify_token_and_get_user( credentials: HTTPAuthorizationCredentials = Security(bearer_scheme), db: Session = Depends(get_db), )", "description": "Verifies the demo token and retrieves or creates the user.", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "Health check endpoint to verify database connectivity.", "scope": "", "scopeKind": ""}, {"name": "login(payload: LoginRequest, db: Session = Depends(get_db))", "description": "Demo login endpoint that issues a token and creates user if needed.", "scope": "", "scopeKind": ""}, {"name": "list_notes(current_user: User = Depends(verify_token_and_get_user), db: Session = Depends(get_db))", "description": "Returns all notes belonging to the authenticated user.", "scope": "", "scopeKind": ""}, {"name": "create_note(payload: NoteCreate, current_user: User = Depends(verify_token_and_get_user), db: Session = Depends(get_db))", "description": "Creates a new note for the authenticated user.", "scope": "", "scopeKind": ""}, {"name": "update_note( note_id: int, payload: NoteUpdate, current_user: User = Depends(verify_token_and_get_user), db: Session = Depends(get_db), )", "description": "Updates an existing note owned by the user.", "scope": "", "scopeKind": ""}, {"name": "delete_note(note_id: int, current_user: User = Depends(verify_token_and_get_user), db: Session = Depends(get_db))", "description": "Deletes a note owned by the user.", "scope": "", "scopeKind": ""}, {"name": "websocket_usage_info()", "description": "Provides documentation on how WebSocket endpoints would be described.", "scope": "", "scopeKind": ""}, {"name": "login_alias_api_prefix(payload: LoginRequest, db: Session = Depends(get_db))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "login_alias_trailing_slash(payload: LoginRequest, db: Session = Depends(get_db))", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["os.getenv", "create_engine", "sessionmaker", "Base.metadata.create_all", "db.query", "db.add", "db.commit", "db.refresh", "db.delete", "engine.connect", "conn.exec_driver_sql", "datetime.now", "func.now"], "search-terms": ["FastAPI", "token authentication", "notes CRUD", "SQLAlchemy models", "User and Note schemas", "environment configuration", "database fallback", "health endpoint"], "state": 2, "file_id": 3, "knowledge_revision": 24, "git_revision": "059d7f68eac081a1629bba303b54dc44c8cbc9f3", "revision_history": [{"9": "98869d4c5d23f02911b7a0ba080658aab4992cc3"}, {"10": "98869d4c5d23f02911b7a0ba080658aab4992cc3"}, {"18": "e810d5fccdf028ca712638f33e492d61d5f48556"}, {"19": "67aa6c671c916eb149b9fbaad1cdab71af0e63d6"}, {"20": "67aa6c671c916eb149b9fbaad1cdab71af0e63d6"}, {"21": "67aa6c671c916eb149b9fbaad1cdab71af0e63d6"}, {"22": "e539e6e68470834079ba9f8dd9a41977fdc0bc89"}, {"24": "059d7f68eac081a1629bba303b54dc44c8cbc9f3"}], "ctags": [{"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^Base = declarative_base()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "NoteOut", "scopeKind": "class"}, {"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "UserOut", "scopeKind": "class"}, {"_type": "tag", "name": "DATABASE_URL", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^engine, DATABASE_URL = _create_engine_with_fallback()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "LoginRequest", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^class LoginRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^class Note(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteBase", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^class NoteBase(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteCreate", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^class NoteCreate(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteOut", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^class NoteOut(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteUpdate", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^class NoteUpdate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "TokenResponse", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^class TokenResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^class User(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserOut", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^class UserOut(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    __tablename__ = \"notes\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    __tablename__ = \"users\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "_build_db_url_from_env", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^def _build_db_url_from_env() -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_create_engine_with_fallback", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^def _create_engine_with_fallback() -> tuple:$/", "language": "Python", "typeref": "typename:tuple", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "access_token", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    access_token: str = Field(..., description=\"Bearer token to use in Authorization header\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TokenResponse", "scopeKind": "class"}, {"_type": "tag", "name": "allow_origins", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^allow_origins = [o.strip() for o in allowed_origins_env.split(\",\")] if allowed_origins_env else /", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "allowed_origins_env", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^allowed_origins_env = os.getenv(\"ALLOW_ORIGINS\", \"*\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "bearer_scheme", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^bearer_scheme = HTTPBearer(auto_error=True)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    content = Column(Text, nullable=True)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    content: Optional[str] = Field(None, description=\"Content of the note (optional)\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    content: Optional[str] = Field(None, description=\"Updated content\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^def create_note(payload: NoteCreate, current_user: User = Depends(verify_token_and_get_user), db/", "language": "Python", "kind": "function", "signature": "(payload: NoteCreate, current_user: User = Depends(verify_token_and_get_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    created_at = Column(DateTime(timezone=True), nullable=False, server_default=func.now())$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    created_at = Column(DateTime(timezone=True), nullable=False, server_default=func.now())$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    created_at: datetime = Field(..., description=\"Creation timestamp\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "NoteOut", "scopeKind": "class"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^def delete_note(note_id: int, current_user: User = Depends(verify_token_and_get_user), db: Sessi/", "language": "Python", "kind": "function", "signature": "(note_id: int, current_user: User = Depends(verify_token_and_get_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    email = Column(String(254), unique=True, index=True, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    email: str = Field(..., description=\"User email for login\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "LoginRequest", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    email: str = Field(..., description=\"User email\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserOut", "scopeKind": "class"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^engine, DATABASE_URL = _create_engine_with_fallback()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "from_attributes", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^        from_attributes = True$/", "language": "Python", "kind": "variable", "scope": "NoteOut.Config", "scopeKind": "class"}, {"_type": "tag", "name": "from_attributes", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^        from_attributes = True$/", "language": "Python", "kind": "variable", "scope": "UserOut.Config", "scopeKind": "class"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    id = Column(Integer, primary_key=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    id = Column(Integer, primary_key=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    id: int = Field(..., description=\"Note ID\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "NoteOut", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    id: int = Field(..., description=\"User ID\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "UserOut", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^def list_notes(current_user: User = Depends(verify_token_and_get_user), db: Session = Depends(ge/", "language": "Python", "kind": "function", "signature": "(current_user: User = Depends(verify_token_and_get_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^def login(payload: LoginRequest, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: LoginRequest, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "login_alias_api_prefix", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^def login_alias_api_prefix(payload: LoginRequest, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: LoginRequest, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "login_alias_trailing_slash", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^def login_alias_trailing_slash(payload: LoginRequest, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(payload: LoginRequest, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    notes = relationship(\"Note\", back_populates=\"owner\", cascade=\"all, delete-orphan\")$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "owner", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    owner = relationship(\"User\", back_populates=\"notes\")$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    password: Optional[str] = Field(None, description=\"Password (ignored for demo)\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "LoginRequest", "scopeKind": "class"}, {"_type": "tag", "name": "password_hash", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    password_hash = Column(String(255), nullable=True)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    title = Column(String(255), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    title: Optional[str] = Field(None, description=\"Updated title\", min_length=1, max_length=255/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    title: str = Field(..., description=\"Title of the note\", min_length=1, max_length=255)$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "token_type", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    token_type: str = Field(..., description=\"Token type, always 'bearer'\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TokenResponse", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^def update_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int, payload: NoteUpdate, current_user: User = Depends(verify_token_and_get_user), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "updated_at", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    updated_at = Column(DateTime(timezone=True), nullable=False, server_default=func.now(), onup/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "updated_at", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    updated_at: datetime = Field(..., description=\"Last update timestamp\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "NoteOut", "scopeKind": "class"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    user: UserOut = Field(..., description=\"Authenticated user\")$/", "language": "Python", "typeref": "typename:UserOut", "kind": "variable", "scope": "TokenResponse", "scopeKind": "class"}, {"_type": "tag", "name": "user_id", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^    user_id = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=False, index=/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "verify_token_and_get_user", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^def verify_token_and_get_user($/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "( credentials: HTTPAuthorizationCredentials = Security(bearer_scheme), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "websocket_usage_info", "path": "/home/kavia/workspace/code-generation/note-management-system-26353-26362/notes_backend/src/api/main.py", "pattern": "/^def websocket_usage_info():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "468174236a1eab2d0d45ff1d71f71337", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/main.py", "fields": [{"name": "Base = declarative_base()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "engine, DATABASE_URL = _create_engine_with_fallback()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "__tablename__ = \"notes\"", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "__tablename__ = \"users\"", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "str access_token", "scope": "TokenResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "allow_origins = [o.strip() for o in allowed_origins_env.split(\",\")] if allowed_origins_env else /", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "allowed_origins_env = os.getenv(\"ALLOW_ORIGINS\", \"*\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bearer_scheme = HTTPBearer(auto_error=True)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "content = Column(Text, nullable=True)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] content", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "created_at = Column(DateTime(timezone=True), nullable=False, server_default=func.now())", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime created_at", "scope": "NoteOut", "scopeKind": "class", "description": "unavailable"}, {"name": "email = Column(String(254), unique=True, index=True, nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "str email", "scope": "LoginRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "from_attributes = True", "scope": "NoteOut.Config", "scopeKind": "class", "description": "unavailable"}, {"name": "id = Column(Integer, primary_key=True, index=True)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "int id", "scope": "NoteOut", "scopeKind": "class", "description": "unavailable"}, {"name": "notes = relationship(\"Note\", back_populates=\"owner\", cascade=\"all, delete-orphan\")", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "owner = relationship(\"User\", back_populates=\"notes\")", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] password", "scope": "LoginRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "password_hash = Column(String(255), nullable=True)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "title = Column(String(255), nullable=False)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] title", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str title", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "str token_type", "scope": "TokenResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "updated_at = Column(DateTime(timezone=True), nullable=False, server_default=func.now(), onup/", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime updated_at", "scope": "NoteOut", "scopeKind": "class", "description": "unavailable"}, {"name": "UserOut user", "scope": "TokenResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "user_id = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=False, index=/", "scope": "Note", "scopeKind": "class", "description": "unavailable"}]}